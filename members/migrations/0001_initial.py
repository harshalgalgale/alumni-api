# Generated by Django 3.2.5 on 2021-07-06 13:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
        ('students', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PersonalProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('avatar', models.FileField(blank=True, null=True, upload_to='')),
                ('bio', models.TextField(blank=True, max_length=500, null=True)),
                ('student', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='students.student')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Member profile',
                'verbose_name_plural': 'Member profiles',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='WorkProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, default='', help_text='Country', max_length=150)),
                ('state', models.CharField(blank=True, default='', help_text='Region/State', max_length=150)),
                ('district', models.CharField(blank=True, default='', help_text='District', max_length=150)),
                ('town_city', models.CharField(blank=True, default='', help_text='Village/Taluka/Town/City.', max_length=150)),
                ('street_name', models.CharField(blank=True, default='', help_text='Street name', max_length=255)),
                ('address_line', models.CharField(blank=True, help_text='House name/number', max_length=255)),
                ('post_code', models.CharField(blank=True, default='', help_text='Post/ZIP code', max_length=15)),
                ('plus_code', models.CharField(blank=True, default='', help_text='Plus code (https://maps.google.com/pluscodes/)', max_length=20)),
                ('organisation', models.CharField(blank=True, help_text='Organisation name', max_length=150)),
                ('position', models.CharField(blank=True, help_text='Position title', max_length=150)),
                ('role', models.CharField(blank=True, help_text='Role description', max_length=150)),
                ('url', models.URLField(blank=True, help_text='Organisation url', max_length=150)),
                ('personal_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='members.personalprofile')),
                ('sector', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.subsector')),
            ],
            options={
                'ordering': ['personal_profile'],
            },
        ),
        migrations.CreateModel(
            name='PermanentAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, default='', help_text='Country', max_length=150)),
                ('state', models.CharField(blank=True, default='', help_text='Region/State', max_length=150)),
                ('district', models.CharField(blank=True, default='', help_text='District', max_length=150)),
                ('town_city', models.CharField(blank=True, default='', help_text='Village/Taluka/Town/City.', max_length=150)),
                ('street_name', models.CharField(blank=True, default='', help_text='Street name', max_length=255)),
                ('address_line', models.CharField(blank=True, help_text='House name/number', max_length=255)),
                ('post_code', models.CharField(blank=True, default='', help_text='Post/ZIP code', max_length=15)),
                ('plus_code', models.CharField(blank=True, default='', help_text='Plus code (https://maps.google.com/pluscodes/)', max_length=20)),
                ('personal_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='members.personalprofile')),
            ],
            options={
                'ordering': ['personal_profile'],
            },
        ),
        migrations.CreateModel(
            name='SocialProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_media', models.CharField(choices=[('linkedin', 'LinkedIn'), ('facebook', 'Facebook'), ('instagram', 'Instagram')], help_text='Social channel', max_length=10)),
                ('url', models.URLField(blank=True, help_text='Social handle')),
                ('personal_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.personalprofile')),
            ],
            options={
                'ordering': ['personal_profile'],
                'unique_together': {('personal_profile', 'social_media')},
            },
        ),
        migrations.CreateModel(
            name='ProfessionalSkills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personal_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.personalprofile')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.skills')),
            ],
            options={
                'ordering': ['personal_profile'],
                'unique_together': {('personal_profile', 'skill')},
            },
        ),
    ]
